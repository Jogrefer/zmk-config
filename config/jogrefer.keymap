#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {

   behaviors {
      mt {
         tapping-term-ms = <150>;
      };

      lt {
         tapping-term-ms = <150>;
      };
   };

   macros {
      ntilde: ntilde {
         compatible = "zmk,behavior-macro";
         #binding-cells = <0>;
         bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp N>,
            <&macro_release &kp LALT>,
            <&macro_tap &kp N>;
      };
   };

   keymap {
      compatible = "zmk,keymap";

         default_layer {
            /* ╭────────────────────╮   ╭────────────────────╮
               │  ×  1  2  3  4  5  │   │  6  7  8  9  0  \  │
               │  ⭾  F  M  N  G  X  ╰───╯  W  V  B  P  Y  -  │
               │  ⇪  D  T  R  S  L  Ç   ⌗  U  A  E  O  I  +  │
               │  `  Z  Q  H  C  K  [   <  Ñ  J  ,  .  /  ⇪  │
               │  m  ⌃  ⌥  ⌘  ␣  ←  ]   ⌘  ↩︎  ␣  ←  ↑  ↓  →  │
               ╰─────────────────────────────────────────────╯ */
            display-name = "default";
            bindings = <
               &kp ESC              &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                                    &kp N6      &kp N7     &kp N8     &kp N9    &kp N0     &kp BACKSLASH
               &kp TAB              &kp F      &kp M     &kp N     &kp G      &kp X                                     &kp W       &kp V      &kp B      &kp P     &kp Y      &kp MINUS
               &kp LA(E)            &kp D      &kp T     &kp R     &kp S      &kp L          &kp GRAVE  &kp APOSTROPHE  &kp U       &kp A      &kp E      &kp O     &kp I      &kp EQUAL
               &mt LSHIFT CAPSLOCK  &kp Z      &kp Q     &kp H     &kp C      &kp K          &kp LBKT   &kp SEMICOLON   &ntilde     &kp J      &kp COMMA  &kp DOT   &kp SLASH  &mt RSHIFT CAPSLOCK
               &lt 1 GLOBE          &kp LCTRL  &kp LALT  &kp LCMD  &kp SPACE  &kp BACKSPACE  &kp RBKT   &mt RCMD K_APP  &kp ENTER   &kp LEFT   &kp UP     &kp DOWN  &kp RIGHT  &kp none
            >;
         };

         functions_layer {
            /* ╭─────────────────────────────────╮      ╭────────────────────────────────╮
               │  F1   F2   F3   F4   F5   F6    │      │  F7   F8   F9   F10  F11  F12  │
               │  Sc   VLU  BRU  BTN  BTP  BTC   ╰──────╯  CAP  7    8    9    /    -    │
               │  USB  VLD  BRD  BT0  BT1  BTD0  Ç    ⌗    PAU  4    5    6    *    +    │
               │  BLE  MUT  NXT  PLY  PRV  BTD1  MB4  MB5  NLK  1    2    3    INS  MB3  │
               │  MSL  MSD  MSU  MSR  ␣    SUPR  MB2  MB1  ↩︎    EQL  HOM  PUP  PDN  END  │
               ╰─────────────────────────────────────────────────────────────────────────╯ */
            display-name = "functions";
            bindings = <
               &kp F1  &kp F2             &kp F3        &kp F4            &kp F5        &kp F6                              &kp F7           &kp F8      &kp F9       &kp F10        &kp F11          &kp F12
               &trans  &kp C_VOL_UP       &kp C_BRI_UP  &trans            &trans        &kp SCROLLLOCK                      &kp KP_NUMLOCK   &kp KP_N7   &kp KP_N8    &kp KP_N9      &kp KP_DIVIDE    &kp KP_PLUS
               &trans  &kp C_VOLUME_DOWN  &kp C_BRI_DN  &trans            &trans        &trans          &mkp MB5  &to 2     &kp PAUSE_BREAK  &kp KP_N4   &kp KP_N5    &kp KP_N6      &kp KP_MULTIPLY  &kp KP_MINUS
               &trans  &kp C_MUTE         &kp C_NEXT    &kp C_PLAY_PAUSE  &kp C_PREV    &trans          &mkp MB3  &mkp MB4  &kp KP_N0        &kp KP_N1   &kp KP_N2    &kp KP_N3      &kp INSERT       &trans 
               &trans  &trans             &trans        &trans            &trans        &kp DEL         &mkp MB2  &mkp MB1  &kp KP_EQUAL     &kp HOME    &kp PAGE_UP  &kp PAGE_DOWN  &kp END          &kp none
            >;
         };

         actions_layer {
            // Esta capa es para las funciones de Bluetooth y otras de mouse.
            display-name = "actions";
            bindings = <
               &trans  &trans         &trans         &trans         &trans         &trans                         &trans  &trans           &trans          &trans          &trans           &trans
               &trans  &out OUT_USB   &out OUT_BLE   &bt BT_NXT     &bt BT_PRV     &bt BT_CLR                     &trans  &trans           &trans          &trans          &trans           &trans
               &trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans  &to 0   &trans  &msc SCRL_RIGHT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_LEFT   &trans
               &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans  &trans  &trans  &mmv MOVE_LEFT   &mmv MOVE_UP    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans 
               &trans  &trans         &trans         &trans         &trans         &kp DEL        &trans  &trans  &trans  &trans           &trans          &trans          &trans           &trans
            >;
         };
   };
};